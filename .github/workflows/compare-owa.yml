name: Diff OWA & CWA

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  issue_comment:
    types: [created, edited]
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Target branch to compare against'
        required: false
        default: 'main'
        type: string

jobs:
  parse-command:
    if: github.event_name == 'issue_comment' && github.event.issue.pull_request
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      target_branch: ${{ steps.parse.outputs.target_branch }}
      should_run: ${{ steps.parse.outputs.should_run }}
    steps:
      - id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body;
            console.log('Comment body:', comment);

            // Magic commands to detect
            let targetBranch = null;
            let shouldRun = false;

            // /owa-sync [branch] - Main command
            const syncMatch = comment.match(/\/owa-sync(?:\s+(\S+))?/i);
            if (syncMatch) {
              shouldRun = true;
              targetBranch = syncMatch[1] || 'main';  // Use specified branch or default to main
              console.log(`Found sync command, target branch: ${targetBranch}`);
            }

            core.setOutput('target_branch', targetBranch || 'main');
            core.setOutput('should_run', shouldRun.toString());

            return { targetBranch: targetBranch || 'main', shouldRun };

  compare:
    runs-on: ubuntu-latest
    needs: [parse-command]
    if: |
      always() && (
        github.event_name != 'issue_comment' ||
        needs.parse-command.outputs.should_run == 'true'
      )
    permissions:
      contents: read
      pull-requests: read
    outputs:
      pull_has_changes: ${{ steps.compare.outputs.pull_has_changes }}
      push_has_changes: ${{ steps.compare.outputs.push_has_changes }}
      changes_summary: ${{ steps.compare.outputs.changes_summary }}
      detailed_changes: ${{ steps.compare.outputs.detailed_changes }}
      target_branch: ${{ steps.get-branch.outputs.target_branch }}
    steps:
      - uses: actions/checkout@v4
      - id: get-branch
        name: Determine target branch
        run: |
          # Priority: 1. Comment command, 2. Workflow input, 3. Env var, 4. Default
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            TARGET_BRANCH="${{ needs.parse-command.outputs.target_branch }}"
          else
            TARGET_BRANCH="${{ github.event.inputs.target_branch || env.TARGET_BRANCH || 'main' }}"
          fi
          echo "target_branch=$TARGET_BRANCH" >> $GITHUB_OUTPUT
          echo "Using target branch: $TARGET_BRANCH"
        env:
          TARGET_BRANCH: main
      - name: Clone upstream repository
        run: |
          TARGET_BRANCH="${{ steps.get-branch.outputs.target_branch }}"
          echo "Cloning branch: $TARGET_BRANCH"
          git clone --branch "$TARGET_BRANCH" https://github.com/open-world-agents/open-world-agents.git /tmp/upstream-owa
      - id: compare
        run: |
          chmod +x scripts/compare-owa.sh
          TARGET_BRANCH="${{ steps.get-branch.outputs.target_branch }}" scripts/compare-owa.sh

      - if: steps.compare.outputs.push_has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: rsync-patch
          path: /tmp/rsync-changes.patch

  post-comment:
    runs-on: ubuntu-latest
    needs: [parse-command, compare]
    if: |
      always() && needs.compare.result == 'success' && (
        (github.event_name == 'pull_request' && (needs.compare.outputs.pull_has_changes == 'true' || needs.compare.outputs.push_has_changes == 'true')) ||
        (github.event_name == 'issue_comment' && needs.parse-command.outputs.should_run == 'true')
      )
    permissions:
      pull-requests: write
    steps:
      - name: Add reaction to command comment
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });
      - uses: actions/github-script@v7
        env:
          CHANGES_SUMMARY: ${{ needs.compare.outputs.changes_summary }}
          DETAILED_CHANGES: ${{ needs.compare.outputs.detailed_changes }}
        with:
          script: |
            const pull = '${{ needs.compare.outputs.pull_has_changes }}' === 'true';
            const push = '${{ needs.compare.outputs.push_has_changes }}' === 'true';

            if (!pull && !push) return;

            let body = "<!-- compare-owa-action -->\nüîÑ **OWA Sync Status**\n";
            body += `**Target Branch:** \`${{ needs.compare.outputs.target_branch }}\`\n\n`;

            if (pull && push) {
              body += "‚ö†Ô∏è **Both directions have changes** - review carefully before syncing\n\n";
            }

            // Add concise changes summary
            const changesSummary = process.env.CHANGES_SUMMARY || '';
            if (changesSummary && changesSummary !== '') {
              body += changesSummary + "\n";
            }

            // Add detailed changes in collapsible section
            const detailedChanges = process.env.DETAILED_CHANGES || '';
            if (detailedChanges && detailedChanges !== '') {
              body += "<details><summary>üìä Detailed Changes</summary>\n\n";
              body += detailedChanges;
              body += "</details>\n\n";
            }

            // Get the detailed report from workflow summary
            const summaryUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;

            body += "<details><summary>üìã How to sync</summary>\n\n";

            if (pull) {
              const targetBranch = '${{ needs.compare.outputs.target_branch }}';
              body += "**üì• To pull upstream changes:**\n\n" +
                      "**üü¢ Non-destructive method (recommended):**\n" +
                      "```bash\n" +
                      `git subtree pull --prefix=open-world-agents https://github.com/open-world-agents/open-world-agents.git ${targetBranch} --squash\n` +
                      "```\n\n" +
                      "**üî¥ Destructive method (overwrites local changes):**\n" +
                      "```bash\n" +
                      `git clone --branch ${targetBranch} https://github.com/open-world-agents/open-world-agents.git /tmp/upstream\n` +
                      "rsync -av --delete --exclude='.git' /tmp/upstream/ ./open-world-agents/\n" +
                      "git add open-world-agents/\n" +
                      `git commit -m \"Sync with upstream open-world-agents (${targetBranch})\"\n` +
                      "```\n\n";
            }

            if (push) {
              body += "**üì§ To push local changes:**\n\n" +
                      "**üü¢ Non-destructive method (recommended):**\n" +
                      "```bash\n" +
                      "# First, ensure you have a fork of open-world-agents\n" +
                      `git subtree push --prefix=open-world-agents https://github.com/YOUR_USERNAME/open-world-agents.git sync-${targetBranch}-$(date +%Y%m%d)\n` +
                      `# Then create a pull request from your fork to upstream/${targetBranch}\n` +
                      "```\n\n" +
                      "**üî¥ Destructive method (overwrites upstream changes):**\n" +
                      "1. Download the `rsync-patch` artifact from this workflow\n" +
                      "2. Apply to your fork of open-world-agents\n" +
                      `3. Create a pull request targeting \`${targetBranch}\`\n\n` +
                      "Or use rsync:\n" +
                      "```bash\n" +
                      `git clone --branch ${targetBranch} https://github.com/open-world-agents/open-world-agents.git /tmp/upstream-pr\n` +
                      "cd /tmp/upstream-pr\n" +
                      `git checkout -b sync-${targetBranch}-$(date +%Y%m%d)\n` +
                      "rsync -av --delete --exclude='.git' ../open-world-agents/ ./\n" +
                      "git add -A\n" +
                      `git commit -m \"Sync changes from proprietary to ${targetBranch}\"\n` +
                      `git push origin sync-${targetBranch}-$(date +%Y%m%d)\n` +
                      "```\n\n";
            }

            body += "</details>\n\n";

            // Add command help
            body += "<details><summary>üí¨ Change Target Branch</summary>\n\n";
            body += "Comment with `/owa-sync [branch]` to compare against a different branch:\n\n";
            body += "- `/owa-sync` - Compare with main (default)\n";
            body += "- `/owa-sync develop` - Compare with develop branch\n";
            body += "- `/owa-sync feature/xyz` - Compare with feature/xyz branch\n\n";
            body += "</details>\n\n";

            body += `*Full report also available in [workflow summary](${summaryUrl})*`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number
            });
            const existing = comments.find(c => c.user.login === 'github-actions[bot]' && c.body.includes('<!-- compare-owa-action -->'));

            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner, repo: context.repo.repo, comment_id: existing.id, body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number, body
              });
            }
