import re

from owa.data.encoders import create_encoder


def compute_metrics_for_event(prediction: str, ground_truth: str) -> dict:
    """Compute metrics for a single prediction."""
    # Parse events with <EVENT_START> and <EVENT_END>
    prediction_events = re.findall(r"<EVENT_START>(.*?)<EVENT_END>", prediction)
    ground_truth_events = re.findall(r"<EVENT_START>(.*?)<EVENT_END>", ground_truth)

    encoder = create_encoder(encoder_type="hierarchical")
    pred_messages = encoder.decode_batch(prediction_events)
    gt_messages = encoder.decode_batch(ground_truth_events)
    print(pred_messages)
    print(gt_messages)
    return {}


if __name__ == "__main__":
    PRED = "<EVENT_START><TIMESTAMP><7><5><0><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><3><5><0><MOUSE><10><10><0><9><4><8><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><3><5><6><MOUSE><10><9><0><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><3><6><2><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><3><6><2><MOUSE><10><10><3><9><0><6><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><3><6><5><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><3><7><7><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><3><0><0><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><1><2><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><2><2><MOUSE><68><press><EVENT_END><EVENT_START><TIMESTAMP><4><2><8><MOUSE><10><10><0><0><4><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><2><5><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><2><5><MOUSE><10><10><0><0><0><4><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><3><1><MOUSE><10><10><0><9><0><8><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><3><7><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><3><7><MOUSE><10><9><3><9><0><6><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><4><3><MOUSE><10><9><0><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><5><0><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><5><0><MOUSE><10><10><3><9><0><8><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><5><6><MOUSE><10><9><2><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><6><2><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><6><2><MOUSE><10><10><3><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><6><8><MOUSE><10><10><3><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><7><5><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><7><5><MOUSE><10><10><6><0><0><0><0><0><0><EVENT_END>"
    TRUE = "<EVENT_START><TIMESTAMP><3><5><0><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><3><5><0><MOUSE><10><9><0><9><4><8><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><3><5><6><MOUSE><10><10><2><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><3><6><2><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><3><6><2><MOUSE><10><9><1><9><0><8><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><3><7><5><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><3><8><7><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><0><0><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><1><2><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><1><8><KEYBOARD><65><press><EVENT_END><EVENT_START><TIMESTAMP><4><1><8><MOUSE><10><10><0><0><2><4><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><2><5><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><2><5><MOUSE><10><10><1><0><0><2><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><3><1><MOUSE><10><9><2><9><0><8><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><3><7><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><3><7><MOUSE><10><9><2><9><0><8><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><4><3><MOUSE><10><10><2><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><5><0><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><5><0><MOUSE><10><9><3><9><0><8><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><5><6><MOUSE><10><10><2><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><6><2><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><6><2><MOUSE><10><10><3><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><6><8><MOUSE><10><10><6><0><0><0><0><0><0><EVENT_END><EVENT_START><TIMESTAMP><4><7><5><fake_token_around_image><global-img><fake_token_around_image><EVENT_END><EVENT_START><TIMESTAMP><4><7><5><MOUSE><10><10><3><0><0><2><0><0><0><EVENT_END>"
    metric = compute_metrics_for_event(PRED, TRUE)
    print(metric)
